<UserControl x:Class="BgCommon.Prism.Wpf.Controls.InputMessageView"             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"              xmlns:prism="http://prismlibrary.com/"             xmlns:hc="https://handyorg.github.io/handycontrol"             xmlns:bg="http://www.sz-baigu.com/"             xmlns:v="clr-namespace:BgCommon.Prism.Wpf.Controls"             xmlns:behaviors="clr-namespace:BgCommon.Prism.Wpf.Controls.Behaviors"             xmlns:m="clr-namespace:BgCommon.Prism.Wpf.Controls.Models"             xmlns:vm="clr-namespace:BgCommon.Prism.Wpf.Controls.ViewModels"             xmlns:selectors="clr-namespace:BgCommon.Prism.Wpf.Controls.Selectors"             mc:Ignorable="d" Height="Auto"              MinWidth="600"  MaxWidth="1024" MinHeight="360"             d:DataContext="{d:DesignInstance vm:InputMessageViewModel}"             prism:ViewModelLocator.AutoWireViewModel="True"                          Background="Transparent">    <prism:Dialog.WindowStyle>        <Style TargetType="Window">            <Setter Property="WindowStyle" Value="None"/>        </Style>    </prism:Dialog.WindowStyle>    <UserControl.Resources>        <ResourceDictionary>            <ResourceDictionary.MergedDictionaries>                <ResourceDictionary Source="pack://application:,,,/BgCommon.Prism.Wpf;component/Assets/Style/Theme.xaml" />            </ResourceDictionary.MergedDictionaries>            <!-- 1. 定义数据模板 -->            <!-- 通用文本输入模板 -->            <DataTemplate x:Key="CommonTemplate">                <TextBox hc:InfoElement.Title="{Binding Key}"                         hc:InfoElement.Placeholder="{bg:StringResource 请输入}"                         hc:InfoElement.Necessary="True"                         Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                         Style="{DynamicResource TextBoxExtend}"                          Width="420"/>            </DataTemplate>            <!-- 数字输入模板 -->            <DataTemplate x:Key="NumericTemplate">                <hc:NumericUpDown hc:InfoElement.Title="{Binding Key}"                                  hc:InfoElement.Necessary="True"                                  hc:InfoElement.Placeholder="请输入数字..."                                  Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                                  Width="420"                                  Style="{StaticResource NumericUpDownExtend}"                                  behaviors:InputContentBehavior.Configuration="{Binding}"/>            </DataTemplate>            <!-- 日期时间选择模板 -->            <DataTemplate x:Key="DateTimeTemplate">                <hc:DateTimePicker hc:InfoElement.Title="{Binding Key}"                                   hc:InfoElement.Necessary="True"                                   SelectedDateTime="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                                   Style="{DynamicResource DateTimePickerExtend}"                                    Width="420"/>            </DataTemplate>            <!-- 布尔选择模板 -->            <DataTemplate x:Key="BooleanTemplate">                <!-- CheckBox的标题通常用Content属性 -->                <CheckBox Content="{Binding Key}"                          IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                          Style="{DynamicResource CheckBoxExtend}"                           VerticalAlignment="Center"                          Width="420"/>            </DataTemplate>            <!-- 2. 定义模板选择器实例 -->            <selectors:InputContentTemplateSelector x:Key="MyTemplateSelector"                                                    CommonTemplate="{StaticResource CommonTemplate}"                                                    NumericTemplate="{StaticResource NumericTemplate}"                                                    DateTimeTemplate="{StaticResource DateTimeTemplate}"                                                    BooleanTemplate="{StaticResource BooleanTemplate}"/>        </ResourceDictionary>    </UserControl.Resources>    <Border BorderBrush="{DynamicResource PrimaryBrush}"            BorderThickness="1"            Effect="{DynamicResource EffectShadow1}">        <Grid Background="{DynamicResource RegionBrush}">            <Grid.RowDefinitions>                <RowDefinition Height="60" />                <RowDefinition Height="*" MaxHeight="636" />                <RowDefinition Height="Auto" />            </Grid.RowDefinitions>            <TextBlock FontSize="{DynamicResource HeadFontSize}"                        Text="{Binding Title}"                        Foreground="{DynamicResource PrimaryTextBrush}"                       VerticalAlignment="Center" Margin="15 0" />            <ListBox Grid.Row="1"                     Margin="0 10"                     Style="{DynamicResource ListBoxBaseStyle}"                     BorderThickness="0"                     ItemsSource="{Binding Contents}"                     ItemTemplateSelector="{StaticResource MyTemplateSelector}"                     d:ItemsSource="{d:SampleData ItemCount=4}">                <ListBox.ItemContainerStyle>                    <Style TargetType="ListBoxItem">                        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisualRadius0Margin0}" />                        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />                        <Setter Property="Padding" Value="10,0" />                        <Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment , RelativeSource={RelativeSource AncestorType=ItemsControl}}" />                        <Setter Property="VerticalContentAlignment" Value="Center" />                        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />                        <Setter Property="BorderBrush" Value="Transparent" />                        <Setter Property="BorderThickness" Value="0" />                        <Setter Property="Margin" Value="0,0,0,2" />                        <Setter Property="Template">                            <Setter.Value>                                <ControlTemplate TargetType="{x:Type ListBoxItem}">                                    <Border Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />                                    </Border>                                </ControlTemplate>                            </Setter.Value>                        </Setter>                        <Style.Triggers>                            <Trigger Property="UIElement.IsMouseOver" Value="true">                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />                            </Trigger>                        </Style.Triggers>                    </Style>                </ListBox.ItemContainerStyle>                <ListBox.ItemsPanel>                    <ItemsPanelTemplate>                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 5" />                    </ItemsPanelTemplate>                </ListBox.ItemsPanel>                <ListBox.ItemTemplate>                    <DataTemplate DataType="{x:Type m:InputContent}">                        <ContentPresenter Content="{Binding Element}" />                    </DataTemplate>                </ListBox.ItemTemplate>            </ListBox>            <!--按钮-->            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0 10 0 20"                     HorizontalAlignment="Right" VerticalAlignment="Center">                <Button Style="{DynamicResource ButtonPrimary}"                        bg:BorderElement.CornerRadius="10"                          MinWidth="120" Height="42"                        Content="{Binding OkButtonText}"                         Command="{Binding OkCommand}"                        IsDefault="True"/>                <Button Style="{DynamicResource ButtonDefault}" Margin="15 0 15 0"                         bg:BorderElement.CornerRadius="10"                         MinWidth="120" Height="42"                        Content="{Binding CancelButtonText}"                         Command="{Binding CancelCommand}"                        IsCancel="True" />            </StackPanel>        </Grid>    </Border></UserControl>