using BgCommon.Prism.Wpf.MVVM;namespace BgCommon.Prism.Wpf.Common.ViewModels;/// <summary>/// 用于显示错误的视图模型。/// </summary>public partial class ErrorViewModel : ViewModelBase, IInitialize{    /// <summary>    /// Gets or sets 错误页面的主标题.    /// </summary>    [ObservableProperty]    private string errorTitle = "加载失败";    /// <summary>    /// Gets or sets 面向用户的简要错误信息.    /// </summary>    [ObservableProperty]    private string? errorMessage;    /// <summary>    /// Gets or sets 包含堆栈跟踪等信息的详细错误内容.    /// </summary>    [ObservableProperty]    private string? errorDetails;    /// <summary>    /// Gets or sets a value indicating whether a retry action is available.    /// </summary>    [ObservableProperty]    private bool hasRetryAction;    /// <summary>    /// Initializes a new instance of the <see cref="ErrorViewModel"/> class.    /// </summary>    public ErrorViewModel(IContainerExtension container)        : base(container) { }    /// <summary>    /// Gets the command to execute the retry action.    /// </summary>    public ICommand? RetryCommand { get; private set; }    /// <summary>    /// 使用导航参数初始化ViewModel。    /// </summary>    /// <param name="parameters">包含 "error" (Exception) 和 "retryAction" (Action) 的导航参数.</param>    public void Initialize(INavigationParameters? parameters)    {        ArgumentNullException.ThrowIfNull(parameters, nameof(parameters));        Exception? ex = parameters.GetValue<Exception>("error");        if (ex != null)        {            this.ErrorMessage = ex.Message;            this.ErrorDetails = ex.ToString();        }        Action? retryAction = parameters.GetValue<Action>("retryAction");        if (retryAction != null)        {            this.RetryCommand = new DelegateCommand(retryAction);            this.HasRetryAction = true;        }    }}