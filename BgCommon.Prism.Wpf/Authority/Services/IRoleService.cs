using BgCommon.Prism.Wpf.Authority.Entities;using BgCommon.Prism.Wpf.Authority.Models;namespace BgCommon.Prism.Wpf.Authority.Services;public interface IRoleService{    /// <summary>    /// 获取所有角色列表.    /// </summary>    /// <returns>返回包含所有角色的列表.</returns>    Task<AuthorityResult<List<Role>>> GetAllRolesAsync();    /// <summary>    /// 添加一个新角色.    /// </summary>    /// <param name="roleToAdd">要添加的角色信息.</param>    /// <param name="operatorUser">执行此操作的用户.</param>    /// <returns>操作结果.</returns>    Task<AuthorityResult> AddRoleAsync(Role roleToAdd, UserInfo operatorUser);    /// <summary>    /// 更新一个已有的角色信息.    /// </summary>    /// <param name="roleToUpdate">要更新的角色信息.</param>    /// <param name="operatorUser">执行此操作的用户.</param>    /// <returns>操作结果.</returns>    Task<AuthorityResult> UpdateRoleAsync(Role roleToUpdate, UserInfo operatorUser);    /// <summary>    /// 删除一个角色.    /// </summary>    /// <param name="roleIdToDelete">要删除的角色ID.</param>    /// <param name="operatorUser">当前操作的用户.</param>    /// <returns>操作结果.</returns>    Task<AuthorityResult> DeleteRoleAsync(int roleIdToDelete, UserInfo operatorUser);}