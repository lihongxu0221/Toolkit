using BgCommon.Prism.Wpf.Authority.Entities;using BgCommon.Prism.Wpf.Authority.Models;namespace BgCommon.Prism.Wpf.Authority.Services;public interface IUserService{    /// <summary>    /// 注册用户    /// </summary>    /// <param name="userName">用户名.</param>    /// <param name="password">用户密码.</param>    /// <param name="roleId">角色.</param>    /// <returns>是否成功注册用户.</returns>    Task<AuthorityResult> RegisterAsync(string userName, string password, int roleId);    /// <summary>    /// 更新用户信息.    /// </summary>    /// <param name="userToUpdate">用户信息.</param>    /// <param name="operatorUser">执行此操作的用户.</param>    /// <returns>是否成功更新用户信息.</returns>    Task<AuthorityResult> UpdateUserInfoAsync(UserInfo userToUpdate, UserInfo operatorUser);    /// <summary>    /// 删除用户.    /// </summary>    /// <param name="userIdToDelete">用户编码.</param>    /// <param name="operatorUser">执行此操作的用户.</param>    /// <returns>是否成功删除用户.</returns>    Task<AuthorityResult> DeleteUserAsync(int userIdToDelete, UserInfo operatorUser);    /// <summary>    /// 获取所有用户.    /// </summary>    /// <returns>返回用户列表.</returns>    Task<AuthorityResult<List<UserInfo>>> GetAllUsersAsync();}