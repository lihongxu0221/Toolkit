using BgCommon.Prism.Wpf.Authority.Data;using BgCommon.Prism.Wpf.Authority.Entities;namespace BgCommon.Prism.Wpf.Authority.Services;internal class DatabaseLoggingService : ILoggingService{    private readonly AuthorityDbContextSqlite _context; // 日志服务直接写DbContext，简化事务    public DatabaseLoggingService(AuthorityDbContextSqlite context)    {        this._context = context;    }    /// <inheritdoc/>    public async Task LogOperationAsync(long? operatorId, string operatorUsername, string actionType, string details)    {        try        {            var log = new OperationLog            {                UserId = (int?)operatorId,                Username = operatorUsername,                ActionType = actionType,                Details = details,                Timestamp = DateTime.Now            };            _ = await _context.OperationLogs.AddAsync(log);            _ = await _context.SaveChangesAsync();        }        catch (Exception ex)        {            Debug.WriteLine($"关键操作日志记录失败: {ex.Message}");            throw;        }    }}