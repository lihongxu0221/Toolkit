namespace BgCommon.Prism.Wpf.Authority.Entities;/// <summary>/// 权限设定列表.<br/>/// 权限通常是定义好的、固定的操作，例如 "User.Create", "User.Delete"/// </summary>public partial class Permission : ObservableValidator{    /// <summary>    /// Gets or sets 权限ID.    /// </summary>    [Key]    public int Id { get; set; }    /// <summary>    /// 此权限所属的模块ID (外键)    /// 可以为 null，表示这是一个不与任何UI模块直接绑定的系统级权限    /// </summary>    [ObservableProperty]    private long? moduleId = null;    /// <summary>    /// Gets or sets 权限名称.    /// 例如："创建用户"    /// </summary>    [Required]    [MaxLength(100)]    [ObservableProperty]    private string name = string.Empty;    /// <summary>    /// 例如："User.Create", 用于代码中判断    /// </summary>    [Required]    [MaxLength(100)]    [ObservableProperty]    private string code = string.Empty;    /// <summary>    /// Gets or sets 权限描述.    /// </summary>    [MaxLength(200)]    [ObservableProperty]    private string description = string.Empty;    /// <summary>    /// Gets or sets 导航属性：指向所属模块    /// </summary>    public ModuleInfo? ModuleInfo { get; set; }    /// <summary>    /// Gets or sets 导航属性：通过 RolePermission 连接表指向多个角色.    /// </summary>    public ICollection<RolePermission> RolePermissions { get; set; } = new List<RolePermission>();}