using BgCommon.Wpf.Prism.Authority.Services;using BgCommon.Wpf.Prism.DependencyInjection;namespace BgCommon.Wpf.Prism.Services;/// <summary>/// 初始化服务基类./// </summary>public abstract class InitializationServiceBase : IInitializationService{    private readonly IContainerExtension container;  // Prism Ioc容器实例.    private readonly IDialogService dialogService; // 弹窗服务.    private readonly IRegistrationService? registrationService = null; // 动态注册服务.    private readonly IUserService? userService = null; // 用户服务.    private readonly IModuleService? moduleService = null; // 模块.    private readonly ISplashScreenService? splashScreenService = null; // 启动画面视图.    public InitializationServiceBase(        IContainerExtension container,        IDialogService dialogService,        IRegistrationService registrationService)    {        this.container = container;        this.dialogService = dialogService;    }    protected virtual void RegisterUserService()    {    }    protected virtual void RegisterModuleService()    {    }    protected virtual void RegisterSplashService()    {    }    protected virtual void RegisterTypes(IContainerExtension container)    {    }    protected virtual void Dispose(bool isDispose)    {    }    public void Dispose()    {        Dispose(true);        GC.SuppressFinalize(this);    }    public Task<bool> InitializeAsync()    {        return Task.FromResult(true);    }    public Task<bool> RunAsync()    {        return Task.FromResult(true);    }}