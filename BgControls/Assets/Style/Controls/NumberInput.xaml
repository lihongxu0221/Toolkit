<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    xmlns:bg="http://www.sz-baigu.com/"                    xmlns:local="clr-namespace:BgControls.Controls">    <Style x:Key="NumberInputBaseStyle" TargetType="{x:Type local:NumberInput}" BasedOn="{StaticResource BaseStyle}">        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />        <Setter Property="IsTabStop" Value="False" />        <Setter Property="AllowDrop" Value="true" />        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />        <Setter Property="Background" Value="{DynamicResource MainContentBackgroundBrush}" />        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />        <Setter Property="HorizontalContentAlignment" Value="Center" />        <Setter Property="VerticalContentAlignment" Value="Center" />        <Setter Property="BorderThickness" Value="1" />        <Setter Property="Height" Value="40" />        <Setter Property="DecimalPlaces" Value="0" />        <Setter Property="Value" Value="0" />        <Setter Property="Margin" Value="0" />        <Setter Property="local:BorderElement.CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />        <Setter Property="FontSize" Value="{DynamicResource SubHeadFontSize}" />        <Setter Property="Template">            <Setter.Value>                <ControlTemplate TargetType="{x:Type local:NumberInput}">                    <local:SimplePanel>                        <Border x:Name="root"                                 CornerRadius="{Binding Path=(local:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"                                Margin="{TemplateBinding Margin}"                                BorderBrush="{TemplateBinding BorderBrush}"                                 BorderThickness="{TemplateBinding BorderThickness}"                                Background="{TemplateBinding Background}"                                VerticalAlignment="Stretch"                                HorizontalAlignment="Stretch">                            <Grid>                                <Grid.ColumnDefinitions>                                    <ColumnDefinition Width="Auto" />                                    <ColumnDefinition Width="*" />                                    <ColumnDefinition Width="Auto" />                                </Grid.ColumnDefinitions>                                <Button Grid.Column="0" Height="Auto"                                         Background="{TemplateBinding Background}"                                        Foreground="{TemplateBinding Foreground}"                                        FontSize="{TemplateBinding FontSize}"                                        Command="{x:Static local:ControlCommands.Prev}"                                        IsEnabled="{TemplateBinding IsReadOnly, Converter={StaticResource Boolean2BooleanReConverter}}">                                    <TextBlock FontFamily="{DynamicResource IconFont}"                                               Text="&#xe9d6;"                                                FontSize="{TemplateBinding FontSize}"                                                VerticalAlignment="Center"                                                HorizontalAlignment="Center" />                                </Button>                                <TextBox x:Name="PART_TextBox" Grid.Column="1"                                         BorderThickness="0" Height="Auto"                                         Background="Transparent"                                         FontSize="{TemplateBinding FontSize}"                                         IsReadOnly="{TemplateBinding IsReadOnly}"                                         InputMethod.IsInputMethodEnabled="False"                                         TextWrapping="Wrap"                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"                                          Padding="{TemplateBinding Padding}"/>                                <Button Grid.Column="2" Height="Auto"                                         Background="{TemplateBinding Background}"                                        Foreground="{TemplateBinding Foreground}"                                        FontSize="{TemplateBinding FontSize}"                                        Command="{x:Static local:ControlCommands.Next}"                                        IsEnabled="{TemplateBinding IsReadOnly, Converter={StaticResource Boolean2BooleanReConverter}}">                                    <TextBlock FontFamily="{DynamicResource IconFont}"                                               Text="&#xe9d7;"                                                FontSize="{TemplateBinding FontSize}"                                                VerticalAlignment="Center"                                                HorizontalAlignment="Center" />                                </Button>                            </Grid>                        </Border>                    </local:SimplePanel>                    <ControlTemplate.Resources>                        <Style TargetType="Button" BasedOn="{StaticResource BaseStyle}">                            <Setter Property="Focusable" Value="True" />                            <Setter Property="BorderBrush" Value="Transparent" />                            <Setter Property="BorderThickness" Value="0" />                            <Setter Property="VerticalContentAlignment" Value="Center" />                            <Setter Property="HorizontalContentAlignment" Value="Center" />                            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />                            <Setter Property="FontSize" Value="{StaticResource TextFontSize}" />                            <Setter Property="FontWeight" Value="Bold" />                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />                            <Setter Property="Padding" Value="{DynamicResource DefaultInputPadding}" />                            <Setter Property="Template">                                <Setter.Value>                                    <ControlTemplate TargetType="Button">                                        <Border BorderThickness="{TemplateBinding BorderThickness}"                                                 BorderBrush="{TemplateBinding BorderBrush}"                                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"                                                CornerRadius="{Binding Path=(local:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">                                            <ContentPresenter Name="ContentPresenterMain" RecognizesAccessKey="True"                                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                                               Margin="{TemplateBinding Padding}"                                                              ContentSource="Content" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>                                        </Border>                                        <ControlTemplate.Triggers>                                            <Trigger Property="IsEnabled" Value="False">                                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />                                                <Setter Property="Opacity" Value="0.6" />                                            </Trigger>                                            <Trigger Property="IsMouseOver" Value="True">                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />                                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />                                            </Trigger>                                            <Trigger Property="IsPressed" Value="True">                                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />                                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />                                            </Trigger>                                        </ControlTemplate.Triggers>                                    </ControlTemplate>                                </Setter.Value>                            </Setter>                        </Style>                    </ControlTemplate.Resources>                    <ControlTemplate.Triggers>                        <Trigger Property="IsEnabled" Value="false">                            <Setter Property="Opacity" TargetName="root" Value="0.4" />                        </Trigger>                        <Trigger Property="IsMouseOver" Value="true">                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />                        </Trigger>                        <Trigger Property="IsFocused" Value="true" SourceName="PART_TextBox">                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />                        </Trigger>                    </ControlTemplate.Triggers>                </ControlTemplate>            </Setter.Value>        </Setter>    </Style>    <Style TargetType="{x:Type local:NumberInput}" BasedOn="{StaticResource NumberInputBaseStyle}">        <Setter Property="OverridesDefaultStyle" Value="True"/>    </Style></ResourceDictionary>